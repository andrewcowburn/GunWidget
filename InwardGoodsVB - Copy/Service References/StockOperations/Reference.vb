'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace StockOperations
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://schemas.lawson.com/StockOperations", ConfigurationName:="StockOperations.StockOperations")>  _
    Public Interface StockOperations
        
        'CODEGEN: Generating message contract since the operation PPS363 is neither RPC nor document wrapped.
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function PPS363(ByVal request As StockOperations.PPS363) As StockOperations.PPS363Response
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function PPS363Async(ByVal request As StockOperations.PPS363) As System.Threading.Tasks.Task(Of StockOperations.PPS363Response)
        
        'CODEGEN: Generating message contract since the operation UpdateCosts is neither RPC nor document wrapped.
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function UpdateCosts(ByVal request As StockOperations.UpdateCosts) As StockOperations.UpdateCostsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function UpdateCostsAsync(ByVal request As StockOperations.UpdateCosts) As System.Threading.Tasks.Task(Of StockOperations.UpdateCostsResponse)
        
        'CODEGEN: Generating message contract since the operation Catchweight is neither RPC nor document wrapped.
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function Catchweight(ByVal request As StockOperations.Catchweight) As StockOperations.CatchweightResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function CatchweightAsync(ByVal request As StockOperations.Catchweight) As System.Threading.Tasks.Task(Of StockOperations.CatchweightResponse)
        
        'CODEGEN: Generating message contract since the operation DisplayCosts is neither RPC nor document wrapped.
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function DisplayCosts(ByVal request As StockOperations.DisplayCosts) As StockOperations.DisplayCostsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function DisplayCostsAsync(ByVal request As StockOperations.DisplayCosts) As System.Threading.Tasks.Task(Of StockOperations.DisplayCostsResponse)
    End Interface
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://lawson.com/ws/credentials")>  _
    Partial Public Class lws
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private userField As String
        
        Private passwordField As String
        
        Private companyField As String
        
        Private divisionField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property user() As String
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
                Me.RaisePropertyChanged("user")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
                Me.RaisePropertyChanged("password")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=2)>  _
        Public Property company() As String
            Get
                Return Me.companyField
            End Get
            Set
                Me.companyField = value
                Me.RaisePropertyChanged("company")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property division() As String
            Get
                Return Me.divisionField
            End Get
            Set
                Me.divisionField = value
                Me.RaisePropertyChanged("division")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="ct_1", [Namespace]:="http://schemas.lawson.com/StockOperations/DisplayCosts")>  _
    Partial Public Class ct_13
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private costingSumT1Field As String
        
        Private costingSumW1Field As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property CostingSumT1() As String
            Get
                Return Me.costingSumT1Field
            End Get
            Set
                Me.costingSumT1Field = value
                Me.RaisePropertyChanged("CostingSumT1")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property CostingSumW1() As String
            Get
                Return Me.costingSumW1Field
            End Get
            Set
                Me.costingSumW1Field = value
                Me.RaisePropertyChanged("CostingSumW1")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/DisplayCosts")>  _
    Partial Public Class DisplayCostsResponseType
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private pCS265Field As ct_13
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property PCS265() As ct_13
            Get
                Return Me.pCS265Field
            End Get
            Set
                Me.pCS265Field = value
                Me.RaisePropertyChanged("PCS265")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="ct_0", [Namespace]:="http://schemas.lawson.com/StockOperations/DisplayCosts")>  _
    Partial Public Class ct_03
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private lotNumberField As String
        
        Private facilityField As String
        
        Private itemNumberField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property LotNumber() As String
            Get
                Return Me.lotNumberField
            End Get
            Set
                Me.lotNumberField = value
                Me.RaisePropertyChanged("LotNumber")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Facility() As String
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
                Me.RaisePropertyChanged("Facility")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property ItemNumber() As String
            Get
                Return Me.itemNumberField
            End Get
            Set
                Me.itemNumberField = value
                Me.RaisePropertyChanged("ItemNumber")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/DisplayCosts")>  _
    Partial Public Class DisplayCostsType
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private pCS265Field As ct_03
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property PCS265() As ct_03
            Get
                Return Me.pCS265Field
            End Get
            Set
                Me.pCS265Field = value
                Me.RaisePropertyChanged("PCS265")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="ct_1", [Namespace]:="http://schemas.lawson.com/StockOperations/Catchweight")>  _
    Partial Public Class ct_12
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/Catchweight")>  _
    Partial Public Class CatchweightResponseType
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private mMS360Field As ct_12
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property MMS360() As ct_12
            Get
                Return Me.mMS360Field
            End Get
            Set
                Me.mMS360Field = value
                Me.RaisePropertyChanged("MMS360")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="ct_0", [Namespace]:="http://schemas.lawson.com/StockOperations/Catchweight")>  _
    Partial Public Class ct_02
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private itemNumberField As String
        
        Private warehouseField As String
        
        Private lotNumberField As String
        
        Private locationField As String
        
        Private receivingNumberField As String
        
        Private containerField As String
        
        Private catchWeightField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ItemNumber() As String
            Get
                Return Me.itemNumberField
            End Get
            Set
                Me.itemNumberField = value
                Me.RaisePropertyChanged("ItemNumber")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Warehouse() As String
            Get
                Return Me.warehouseField
            End Get
            Set
                Me.warehouseField = value
                Me.RaisePropertyChanged("Warehouse")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property LotNumber() As String
            Get
                Return Me.lotNumberField
            End Get
            Set
                Me.lotNumberField = value
                Me.RaisePropertyChanged("LotNumber")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
                Me.RaisePropertyChanged("Location")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=4)>  _
        Public Property ReceivingNumber() As String
            Get
                Return Me.receivingNumberField
            End Get
            Set
                Me.receivingNumberField = value
                Me.RaisePropertyChanged("ReceivingNumber")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=5)>  _
        Public Property Container() As String
            Get
                Return Me.containerField
            End Get
            Set
                Me.containerField = value
                Me.RaisePropertyChanged("Container")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property CatchWeight() As String
            Get
                Return Me.catchWeightField
            End Get
            Set
                Me.catchWeightField = value
                Me.RaisePropertyChanged("CatchWeight")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/Catchweight")>  _
    Partial Public Class CatchweightType
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private mMS360Field As ct_02
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property MMS360() As ct_02
            Get
                Return Me.mMS360Field
            End Get
            Set
                Me.mMS360Field = value
                Me.RaisePropertyChanged("MMS360")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="ct_1", [Namespace]:="http://schemas.lawson.com/StockOperations/UpdateCosts")>  _
    Partial Public Class ct_11
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/UpdateCosts")>  _
    Partial Public Class UpdateCostsResponseType
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private pCS265Field As ct_11
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property PCS265() As ct_11
            Get
                Return Me.pCS265Field
            End Get
            Set
                Me.pCS265Field = value
                Me.RaisePropertyChanged("PCS265")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="ct_0", [Namespace]:="http://schemas.lawson.com/StockOperations/UpdateCosts")>  _
    Partial Public Class ct_01
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private itemNumberField As String
        
        Private facilityField As String
        
        Private costingSum1Field As String
        
        Private lotNumberField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ItemNumber() As String
            Get
                Return Me.itemNumberField
            End Get
            Set
                Me.itemNumberField = value
                Me.RaisePropertyChanged("ItemNumber")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Facility() As String
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
                Me.RaisePropertyChanged("Facility")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property CostingSum1() As String
            Get
                Return Me.costingSum1Field
            End Get
            Set
                Me.costingSum1Field = value
                Me.RaisePropertyChanged("CostingSum1")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property LotNumber() As String
            Get
                Return Me.lotNumberField
            End Get
            Set
                Me.lotNumberField = value
                Me.RaisePropertyChanged("LotNumber")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/UpdateCosts")>  _
    Partial Public Class UpdateCostsType
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private pCS265Field As ct_01
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property PCS265() As ct_01
            Get
                Return Me.pCS265Field
            End Get
            Set
                Me.pCS265Field = value
                Me.RaisePropertyChanged("PCS265")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/PPS363")>  _
    Partial Public Class ct_1
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/PPS363")>  _
    Partial Public Class PPS363ResponseType
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private pPS363Field As ct_1
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property PPS363() As ct_1
            Get
                Return Me.pPS363Field
            End Get
            Set
                Me.pPS363Field = value
                Me.RaisePropertyChanged("PPS363")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/PPS363")>  _
    Partial Public Class ct_0
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private packageNumberField As String
        
        Private itemNumberField As String
        
        Private orderLineField As String
        
        Private orderNumberField As String
        
        Private lineSuffixField As String
        
        Private receivedQuantityField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property PackageNumber() As String
            Get
                Return Me.packageNumberField
            End Get
            Set
                Me.packageNumberField = value
                Me.RaisePropertyChanged("PackageNumber")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ItemNumber() As String
            Get
                Return Me.itemNumberField
            End Get
            Set
                Me.itemNumberField = value
                Me.RaisePropertyChanged("ItemNumber")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=2)>  _
        Public Property OrderLine() As String
            Get
                Return Me.orderLineField
            End Get
            Set
                Me.orderLineField = value
                Me.RaisePropertyChanged("OrderLine")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property OrderNumber() As String
            Get
                Return Me.orderNumberField
            End Get
            Set
                Me.orderNumberField = value
                Me.RaisePropertyChanged("OrderNumber")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=4)>  _
        Public Property LineSuffix() As String
            Get
                Return Me.lineSuffixField
            End Get
            Set
                Me.lineSuffixField = value
                Me.RaisePropertyChanged("LineSuffix")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property ReceivedQuantity() As String
            Get
                Return Me.receivedQuantityField
            End Get
            Set
                Me.receivedQuantityField = value
                Me.RaisePropertyChanged("ReceivedQuantity")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/PPS363")>  _
    Partial Public Class PPS363Type
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private pPS363Field As ct_0
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property PPS363() As ct_0
            Get
                Return Me.pPS363Field
            End Get
            Set
                Me.pPS363Field = value
                Me.RaisePropertyChanged("PPS363")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class PPS363
        
        <System.ServiceModel.MessageHeaderAttribute([Namespace]:="http://lawson.com/ws/credentials")>  _
        Public lws As StockOperations.lws
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="PPS363", [Namespace]:="http://schemas.lawson.com/StockOperations/PPS363", Order:=0)>  _
        Public PPS3631 As StockOperations.PPS363Type
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal lws As StockOperations.lws, ByVal PPS3631 As StockOperations.PPS363Type)
            MyBase.New
            Me.lws = lws
            Me.PPS3631 = PPS3631
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class PPS363Response
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="PPS363Response", [Namespace]:="http://schemas.lawson.com/StockOperations/PPS363", Order:=0)>  _
        Public PPS363Response1 As StockOperations.PPS363ResponseType
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PPS363Response1 As StockOperations.PPS363ResponseType)
            MyBase.New
            Me.PPS363Response1 = PPS363Response1
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateCosts
        
        <System.ServiceModel.MessageHeaderAttribute([Namespace]:="http://lawson.com/ws/credentials")>  _
        Public lws As StockOperations.lws
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateCosts", [Namespace]:="http://schemas.lawson.com/StockOperations/UpdateCosts", Order:=0)>  _
        Public UpdateCosts1 As StockOperations.UpdateCostsType
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal lws As StockOperations.lws, ByVal UpdateCosts1 As StockOperations.UpdateCostsType)
            MyBase.New
            Me.lws = lws
            Me.UpdateCosts1 = UpdateCosts1
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateCostsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateCostsResponse", [Namespace]:="http://schemas.lawson.com/StockOperations/UpdateCosts", Order:=0)>  _
        Public UpdateCostsResponse1 As StockOperations.UpdateCostsResponseType
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UpdateCostsResponse1 As StockOperations.UpdateCostsResponseType)
            MyBase.New
            Me.UpdateCostsResponse1 = UpdateCostsResponse1
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class Catchweight
        
        <System.ServiceModel.MessageHeaderAttribute([Namespace]:="http://lawson.com/ws/credentials")>  _
        Public lws As StockOperations.lws
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="Catchweight", [Namespace]:="http://schemas.lawson.com/StockOperations/Catchweight", Order:=0)>  _
        Public Catchweight1 As StockOperations.CatchweightType
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal lws As StockOperations.lws, ByVal Catchweight1 As StockOperations.CatchweightType)
            MyBase.New
            Me.lws = lws
            Me.Catchweight1 = Catchweight1
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class CatchweightResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="CatchweightResponse", [Namespace]:="http://schemas.lawson.com/StockOperations/Catchweight", Order:=0)>  _
        Public CatchweightResponse1 As StockOperations.CatchweightResponseType
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal CatchweightResponse1 As StockOperations.CatchweightResponseType)
            MyBase.New
            Me.CatchweightResponse1 = CatchweightResponse1
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class DisplayCosts
        
        <System.ServiceModel.MessageHeaderAttribute([Namespace]:="http://lawson.com/ws/credentials")>  _
        Public lws As StockOperations.lws
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="DisplayCosts", [Namespace]:="http://schemas.lawson.com/StockOperations/DisplayCosts", Order:=0)>  _
        Public DisplayCosts1 As StockOperations.DisplayCostsType
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal lws As StockOperations.lws, ByVal DisplayCosts1 As StockOperations.DisplayCostsType)
            MyBase.New
            Me.lws = lws
            Me.DisplayCosts1 = DisplayCosts1
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class DisplayCostsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="DisplayCostsResponse", [Namespace]:="http://schemas.lawson.com/StockOperations/DisplayCosts", Order:=0)>  _
        Public DisplayCostsResponse1 As StockOperations.DisplayCostsResponseType
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal DisplayCostsResponse1 As StockOperations.DisplayCostsResponseType)
            MyBase.New
            Me.DisplayCostsResponse1 = DisplayCostsResponse1
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface StockOperationsChannel
        Inherits StockOperations.StockOperations, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class StockOperationsClient
        Inherits System.ServiceModel.ClientBase(Of StockOperations.StockOperations)
        Implements StockOperations.StockOperations
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function StockOperations_StockOperations_PPS363(ByVal request As StockOperations.PPS363) As StockOperations.PPS363Response Implements StockOperations.StockOperations.PPS363
            Return MyBase.Channel.PPS363(request)
        End Function
        
        Public Function PPS363(ByVal lws As StockOperations.lws, ByVal PPS3631 As StockOperations.PPS363Type) As StockOperations.PPS363ResponseType
            Dim inValue As StockOperations.PPS363 = New StockOperations.PPS363()
            inValue.lws = lws
            inValue.PPS3631 = PPS3631
            Dim retVal As StockOperations.PPS363Response = CType(Me,StockOperations.StockOperations).PPS363(inValue)
            Return retVal.PPS363Response1
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function StockOperations_StockOperations_PPS363Async(ByVal request As StockOperations.PPS363) As System.Threading.Tasks.Task(Of StockOperations.PPS363Response) Implements StockOperations.StockOperations.PPS363Async
            Return MyBase.Channel.PPS363Async(request)
        End Function
        
        Public Function PPS363Async(ByVal lws As StockOperations.lws, ByVal PPS3631 As StockOperations.PPS363Type) As System.Threading.Tasks.Task(Of StockOperations.PPS363Response)
            Dim inValue As StockOperations.PPS363 = New StockOperations.PPS363()
            inValue.lws = lws
            inValue.PPS3631 = PPS3631
            Return CType(Me,StockOperations.StockOperations).PPS363Async(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function StockOperations_StockOperations_UpdateCosts(ByVal request As StockOperations.UpdateCosts) As StockOperations.UpdateCostsResponse Implements StockOperations.StockOperations.UpdateCosts
            Return MyBase.Channel.UpdateCosts(request)
        End Function
        
        Public Function UpdateCosts(ByVal lws As StockOperations.lws, ByVal UpdateCosts1 As StockOperations.UpdateCostsType) As StockOperations.UpdateCostsResponseType
            Dim inValue As StockOperations.UpdateCosts = New StockOperations.UpdateCosts()
            inValue.lws = lws
            inValue.UpdateCosts1 = UpdateCosts1
            Dim retVal As StockOperations.UpdateCostsResponse = CType(Me,StockOperations.StockOperations).UpdateCosts(inValue)
            Return retVal.UpdateCostsResponse1
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function StockOperations_StockOperations_UpdateCostsAsync(ByVal request As StockOperations.UpdateCosts) As System.Threading.Tasks.Task(Of StockOperations.UpdateCostsResponse) Implements StockOperations.StockOperations.UpdateCostsAsync
            Return MyBase.Channel.UpdateCostsAsync(request)
        End Function
        
        Public Function UpdateCostsAsync(ByVal lws As StockOperations.lws, ByVal UpdateCosts1 As StockOperations.UpdateCostsType) As System.Threading.Tasks.Task(Of StockOperations.UpdateCostsResponse)
            Dim inValue As StockOperations.UpdateCosts = New StockOperations.UpdateCosts()
            inValue.lws = lws
            inValue.UpdateCosts1 = UpdateCosts1
            Return CType(Me,StockOperations.StockOperations).UpdateCostsAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function StockOperations_StockOperations_Catchweight(ByVal request As StockOperations.Catchweight) As StockOperations.CatchweightResponse Implements StockOperations.StockOperations.Catchweight
            Return MyBase.Channel.Catchweight(request)
        End Function
        
        Public Function Catchweight(ByVal lws As StockOperations.lws, ByVal Catchweight1 As StockOperations.CatchweightType) As StockOperations.CatchweightResponseType
            Dim inValue As StockOperations.Catchweight = New StockOperations.Catchweight()
            inValue.lws = lws
            inValue.Catchweight1 = Catchweight1
            Dim retVal As StockOperations.CatchweightResponse = CType(Me,StockOperations.StockOperations).Catchweight(inValue)
            Return retVal.CatchweightResponse1
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function StockOperations_StockOperations_CatchweightAsync(ByVal request As StockOperations.Catchweight) As System.Threading.Tasks.Task(Of StockOperations.CatchweightResponse) Implements StockOperations.StockOperations.CatchweightAsync
            Return MyBase.Channel.CatchweightAsync(request)
        End Function
        
        Public Function CatchweightAsync(ByVal lws As StockOperations.lws, ByVal Catchweight1 As StockOperations.CatchweightType) As System.Threading.Tasks.Task(Of StockOperations.CatchweightResponse)
            Dim inValue As StockOperations.Catchweight = New StockOperations.Catchweight()
            inValue.lws = lws
            inValue.Catchweight1 = Catchweight1
            Return CType(Me,StockOperations.StockOperations).CatchweightAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function StockOperations_StockOperations_DisplayCosts(ByVal request As StockOperations.DisplayCosts) As StockOperations.DisplayCostsResponse Implements StockOperations.StockOperations.DisplayCosts
            Return MyBase.Channel.DisplayCosts(request)
        End Function
        
        Public Function DisplayCosts(ByVal lws As StockOperations.lws, ByVal DisplayCosts1 As StockOperations.DisplayCostsType) As StockOperations.DisplayCostsResponseType
            Dim inValue As StockOperations.DisplayCosts = New StockOperations.DisplayCosts()
            inValue.lws = lws
            inValue.DisplayCosts1 = DisplayCosts1
            Dim retVal As StockOperations.DisplayCostsResponse = CType(Me,StockOperations.StockOperations).DisplayCosts(inValue)
            Return retVal.DisplayCostsResponse1
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function StockOperations_StockOperations_DisplayCostsAsync(ByVal request As StockOperations.DisplayCosts) As System.Threading.Tasks.Task(Of StockOperations.DisplayCostsResponse) Implements StockOperations.StockOperations.DisplayCostsAsync
            Return MyBase.Channel.DisplayCostsAsync(request)
        End Function
        
        Public Function DisplayCostsAsync(ByVal lws As StockOperations.lws, ByVal DisplayCosts1 As StockOperations.DisplayCostsType) As System.Threading.Tasks.Task(Of StockOperations.DisplayCostsResponse)
            Dim inValue As StockOperations.DisplayCosts = New StockOperations.DisplayCosts()
            inValue.lws = lws
            inValue.DisplayCosts1 = DisplayCosts1
            Return CType(Me,StockOperations.StockOperations).DisplayCostsAsync(inValue)
        End Function
    End Class
End Namespace
