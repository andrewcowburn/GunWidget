'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace wsStockOperations
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://schemas.lawson.com/StockOperations", ConfigurationName:="wsStockOperations.StockOperations")>  _
    Public Interface StockOperations
        
        'CODEGEN: Generating message contract since the operation Update_Averge_Costs is neither RPC nor document wrapped.
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function Update_Averge_Costs(ByVal request As wsStockOperations.Update_Averge_Costs) As wsStockOperations.Update_Averge_CostsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function Update_Averge_CostsAsync(ByVal request As wsStockOperations.Update_Averge_Costs) As System.Threading.Tasks.Task(Of wsStockOperations.Update_Averge_CostsResponse)
        
        'CODEGEN: Generating message contract since the operation UpdateCosts is neither RPC nor document wrapped.
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function UpdateCosts(ByVal request As wsStockOperations.UpdateCosts) As wsStockOperations.UpdateCostsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function UpdateCostsAsync(ByVal request As wsStockOperations.UpdateCosts) As System.Threading.Tasks.Task(Of wsStockOperations.UpdateCostsResponse)
        
        'CODEGEN: Generating message contract since the operation Catchweight is neither RPC nor document wrapped.
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function Catchweight(ByVal request As wsStockOperations.Catchweight) As wsStockOperations.CatchweightResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function CatchweightAsync(ByVal request As wsStockOperations.Catchweight) As System.Threading.Tasks.Task(Of wsStockOperations.CatchweightResponse)
        
        'CODEGEN: Generating message contract since the operation DisplayCosts is neither RPC nor document wrapped.
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function DisplayCosts(ByVal request As wsStockOperations.DisplayCosts) As wsStockOperations.DisplayCostsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function DisplayCostsAsync(ByVal request As wsStockOperations.DisplayCosts) As System.Threading.Tasks.Task(Of wsStockOperations.DisplayCostsResponse)
    End Interface
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://lawson.com/ws/credentials")>  _
    Partial Public Class lws
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private userField As String
        
        Private passwordField As String
        
        Private companyField As String
        
        Private divisionField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property user() As String
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
                Me.RaisePropertyChanged("user")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
                Me.RaisePropertyChanged("password")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=2)>  _
        Public Property company() As String
            Get
                Return Me.companyField
            End Get
            Set
                Me.companyField = value
                Me.RaisePropertyChanged("company")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property division() As String
            Get
                Return Me.divisionField
            End Get
            Set
                Me.divisionField = value
                Me.RaisePropertyChanged("division")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="ct_1", [Namespace]:="http://schemas.lawson.com/StockOperations/DisplayCosts")>  _
    Partial Public Class ct_13
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private costingSumT1Field As String
        
        Private costingSumW1Field As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property CostingSumT1() As String
            Get
                Return Me.costingSumT1Field
            End Get
            Set
                Me.costingSumT1Field = value
                Me.RaisePropertyChanged("CostingSumT1")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property CostingSumW1() As String
            Get
                Return Me.costingSumW1Field
            End Get
            Set
                Me.costingSumW1Field = value
                Me.RaisePropertyChanged("CostingSumW1")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/DisplayCosts")>  _
    Partial Public Class DisplayCostsResponseType
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private pCS265Field As ct_13
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property PCS265() As ct_13
            Get
                Return Me.pCS265Field
            End Get
            Set
                Me.pCS265Field = value
                Me.RaisePropertyChanged("PCS265")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="ct_0", [Namespace]:="http://schemas.lawson.com/StockOperations/DisplayCosts")>  _
    Partial Public Class ct_03
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private lotNumberField As String
        
        Private facilityField As String
        
        Private itemNumberField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property LotNumber() As String
            Get
                Return Me.lotNumberField
            End Get
            Set
                Me.lotNumberField = value
                Me.RaisePropertyChanged("LotNumber")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Facility() As String
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
                Me.RaisePropertyChanged("Facility")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property ItemNumber() As String
            Get
                Return Me.itemNumberField
            End Get
            Set
                Me.itemNumberField = value
                Me.RaisePropertyChanged("ItemNumber")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/DisplayCosts")>  _
    Partial Public Class DisplayCostsType
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private pCS265Field As ct_03
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property PCS265() As ct_03
            Get
                Return Me.pCS265Field
            End Get
            Set
                Me.pCS265Field = value
                Me.RaisePropertyChanged("PCS265")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="ct_1", [Namespace]:="http://schemas.lawson.com/StockOperations/Catchweight")>  _
    Partial Public Class ct_12
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/Catchweight")>  _
    Partial Public Class CatchweightResponseType
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private mMS360Field As ct_12
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property MMS360() As ct_12
            Get
                Return Me.mMS360Field
            End Get
            Set
                Me.mMS360Field = value
                Me.RaisePropertyChanged("MMS360")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="ct_0", [Namespace]:="http://schemas.lawson.com/StockOperations/Catchweight")>  _
    Partial Public Class ct_02
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private itemNumberField As String
        
        Private warehouseField As String
        
        Private lotNumberField As String
        
        Private locationField As String
        
        Private receivingNumberField As String
        
        Private containerField As String
        
        Private catchWeightField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ItemNumber() As String
            Get
                Return Me.itemNumberField
            End Get
            Set
                Me.itemNumberField = value
                Me.RaisePropertyChanged("ItemNumber")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Warehouse() As String
            Get
                Return Me.warehouseField
            End Get
            Set
                Me.warehouseField = value
                Me.RaisePropertyChanged("Warehouse")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property LotNumber() As String
            Get
                Return Me.lotNumberField
            End Get
            Set
                Me.lotNumberField = value
                Me.RaisePropertyChanged("LotNumber")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
                Me.RaisePropertyChanged("Location")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="integer", Order:=4)>  _
        Public Property ReceivingNumber() As String
            Get
                Return Me.receivingNumberField
            End Get
            Set
                Me.receivingNumberField = value
                Me.RaisePropertyChanged("ReceivingNumber")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=5)>  _
        Public Property Container() As String
            Get
                Return Me.containerField
            End Get
            Set
                Me.containerField = value
                Me.RaisePropertyChanged("Container")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property CatchWeight() As String
            Get
                Return Me.catchWeightField
            End Get
            Set
                Me.catchWeightField = value
                Me.RaisePropertyChanged("CatchWeight")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/Catchweight")>  _
    Partial Public Class CatchweightType
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private mMS360Field As ct_02
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property MMS360() As ct_02
            Get
                Return Me.mMS360Field
            End Get
            Set
                Me.mMS360Field = value
                Me.RaisePropertyChanged("MMS360")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="ct_1", [Namespace]:="http://schemas.lawson.com/StockOperations/UpdateCosts")>  _
    Partial Public Class ct_11
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/UpdateCosts")>  _
    Partial Public Class UpdateCostsResponseType
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private pCS265Field As ct_11
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property PCS265() As ct_11
            Get
                Return Me.pCS265Field
            End Get
            Set
                Me.pCS265Field = value
                Me.RaisePropertyChanged("PCS265")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="ct_0", [Namespace]:="http://schemas.lawson.com/StockOperations/UpdateCosts")>  _
    Partial Public Class ct_01
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private itemNumberField As String
        
        Private facilityField As String
        
        Private costingSum1Field As String
        
        Private lotNumberField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ItemNumber() As String
            Get
                Return Me.itemNumberField
            End Get
            Set
                Me.itemNumberField = value
                Me.RaisePropertyChanged("ItemNumber")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Facility() As String
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
                Me.RaisePropertyChanged("Facility")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property CostingSum1() As String
            Get
                Return Me.costingSum1Field
            End Get
            Set
                Me.costingSum1Field = value
                Me.RaisePropertyChanged("CostingSum1")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property LotNumber() As String
            Get
                Return Me.lotNumberField
            End Get
            Set
                Me.lotNumberField = value
                Me.RaisePropertyChanged("LotNumber")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/UpdateCosts")>  _
    Partial Public Class UpdateCostsType
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private pCS265Field As ct_01
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property PCS265() As ct_01
            Get
                Return Me.pCS265Field
            End Get
            Set
                Me.pCS265Field = value
                Me.RaisePropertyChanged("PCS265")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/Update_Averge_Costs")>  _
    Partial Public Class ct_1
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/Update_Averge_Costs")>  _
    Partial Public Class Update_Averge_CostsResponseType
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private cAS370Field As ct_1
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property CAS370() As ct_1
            Get
                Return Me.cAS370Field
            End Get
            Set
                Me.cAS370Field = value
                Me.RaisePropertyChanged("CAS370")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/Update_Averge_Costs")>  _
    Partial Public Class ct_0
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private itemNumberField As String
        
        Private facilityField As String
        
        Private averageCostField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ItemNumber() As String
            Get
                Return Me.itemNumberField
            End Get
            Set
                Me.itemNumberField = value
                Me.RaisePropertyChanged("ItemNumber")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Facility() As String
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
                Me.RaisePropertyChanged("Facility")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property AverageCost() As String
            Get
                Return Me.averageCostField
            End Get
            Set
                Me.averageCostField = value
                Me.RaisePropertyChanged("AverageCost")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.lawson.com/StockOperations/Update_Averge_Costs")>  _
    Partial Public Class Update_Averge_CostsType
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private cAS370Field As ct_0
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property CAS370() As ct_0
            Get
                Return Me.cAS370Field
            End Get
            Set
                Me.cAS370Field = value
                Me.RaisePropertyChanged("CAS370")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class Update_Averge_Costs
        
        <System.ServiceModel.MessageHeaderAttribute([Namespace]:="http://lawson.com/ws/credentials")>  _
        Public lws As wsStockOperations.lws
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="Update_Averge_Costs", [Namespace]:="http://schemas.lawson.com/StockOperations/Update_Averge_Costs", Order:=0)>  _
        Public Update_Averge_Costs1 As wsStockOperations.Update_Averge_CostsType
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal lws As wsStockOperations.lws, ByVal Update_Averge_Costs1 As wsStockOperations.Update_Averge_CostsType)
            MyBase.New
            Me.lws = lws
            Me.Update_Averge_Costs1 = Update_Averge_Costs1
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class Update_Averge_CostsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="Update_Averge_CostsResponse", [Namespace]:="http://schemas.lawson.com/StockOperations/Update_Averge_Costs", Order:=0)>  _
        Public Update_Averge_CostsResponse1 As wsStockOperations.Update_Averge_CostsResponseType
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Update_Averge_CostsResponse1 As wsStockOperations.Update_Averge_CostsResponseType)
            MyBase.New
            Me.Update_Averge_CostsResponse1 = Update_Averge_CostsResponse1
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateCosts
        
        <System.ServiceModel.MessageHeaderAttribute([Namespace]:="http://lawson.com/ws/credentials")>  _
        Public lws As wsStockOperations.lws
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateCosts", [Namespace]:="http://schemas.lawson.com/StockOperations/UpdateCosts", Order:=0)>  _
        Public UpdateCosts1 As wsStockOperations.UpdateCostsType
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal lws As wsStockOperations.lws, ByVal UpdateCosts1 As wsStockOperations.UpdateCostsType)
            MyBase.New
            Me.lws = lws
            Me.UpdateCosts1 = UpdateCosts1
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateCostsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateCostsResponse", [Namespace]:="http://schemas.lawson.com/StockOperations/UpdateCosts", Order:=0)>  _
        Public UpdateCostsResponse1 As wsStockOperations.UpdateCostsResponseType
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UpdateCostsResponse1 As wsStockOperations.UpdateCostsResponseType)
            MyBase.New
            Me.UpdateCostsResponse1 = UpdateCostsResponse1
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class Catchweight
        
        <System.ServiceModel.MessageHeaderAttribute([Namespace]:="http://lawson.com/ws/credentials")>  _
        Public lws As wsStockOperations.lws
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="Catchweight", [Namespace]:="http://schemas.lawson.com/StockOperations/Catchweight", Order:=0)>  _
        Public Catchweight1 As wsStockOperations.CatchweightType
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal lws As wsStockOperations.lws, ByVal Catchweight1 As wsStockOperations.CatchweightType)
            MyBase.New
            Me.lws = lws
            Me.Catchweight1 = Catchweight1
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class CatchweightResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="CatchweightResponse", [Namespace]:="http://schemas.lawson.com/StockOperations/Catchweight", Order:=0)>  _
        Public CatchweightResponse1 As wsStockOperations.CatchweightResponseType
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal CatchweightResponse1 As wsStockOperations.CatchweightResponseType)
            MyBase.New
            Me.CatchweightResponse1 = CatchweightResponse1
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class DisplayCosts
        
        <System.ServiceModel.MessageHeaderAttribute([Namespace]:="http://lawson.com/ws/credentials")>  _
        Public lws As wsStockOperations.lws
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="DisplayCosts", [Namespace]:="http://schemas.lawson.com/StockOperations/DisplayCosts", Order:=0)>  _
        Public DisplayCosts1 As wsStockOperations.DisplayCostsType
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal lws As wsStockOperations.lws, ByVal DisplayCosts1 As wsStockOperations.DisplayCostsType)
            MyBase.New
            Me.lws = lws
            Me.DisplayCosts1 = DisplayCosts1
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class DisplayCostsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="DisplayCostsResponse", [Namespace]:="http://schemas.lawson.com/StockOperations/DisplayCosts", Order:=0)>  _
        Public DisplayCostsResponse1 As wsStockOperations.DisplayCostsResponseType
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal DisplayCostsResponse1 As wsStockOperations.DisplayCostsResponseType)
            MyBase.New
            Me.DisplayCostsResponse1 = DisplayCostsResponse1
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface StockOperationsChannel
        Inherits wsStockOperations.StockOperations, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class StockOperationsClient
        Inherits System.ServiceModel.ClientBase(Of wsStockOperations.StockOperations)
        Implements wsStockOperations.StockOperations
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function wsStockOperations_StockOperations_Update_Averge_Costs(ByVal request As wsStockOperations.Update_Averge_Costs) As wsStockOperations.Update_Averge_CostsResponse Implements wsStockOperations.StockOperations.Update_Averge_Costs
            Return MyBase.Channel.Update_Averge_Costs(request)
        End Function
        
        Public Function Update_Averge_Costs(ByVal lws As wsStockOperations.lws, ByVal Update_Averge_Costs1 As wsStockOperations.Update_Averge_CostsType) As wsStockOperations.Update_Averge_CostsResponseType
            Dim inValue As wsStockOperations.Update_Averge_Costs = New wsStockOperations.Update_Averge_Costs()
            inValue.lws = lws
            inValue.Update_Averge_Costs1 = Update_Averge_Costs1
            Dim retVal As wsStockOperations.Update_Averge_CostsResponse = CType(Me,wsStockOperations.StockOperations).Update_Averge_Costs(inValue)
            Return retVal.Update_Averge_CostsResponse1
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function wsStockOperations_StockOperations_Update_Averge_CostsAsync(ByVal request As wsStockOperations.Update_Averge_Costs) As System.Threading.Tasks.Task(Of wsStockOperations.Update_Averge_CostsResponse) Implements wsStockOperations.StockOperations.Update_Averge_CostsAsync
            Return MyBase.Channel.Update_Averge_CostsAsync(request)
        End Function
        
        Public Function Update_Averge_CostsAsync(ByVal lws As wsStockOperations.lws, ByVal Update_Averge_Costs1 As wsStockOperations.Update_Averge_CostsType) As System.Threading.Tasks.Task(Of wsStockOperations.Update_Averge_CostsResponse)
            Dim inValue As wsStockOperations.Update_Averge_Costs = New wsStockOperations.Update_Averge_Costs()
            inValue.lws = lws
            inValue.Update_Averge_Costs1 = Update_Averge_Costs1
            Return CType(Me,wsStockOperations.StockOperations).Update_Averge_CostsAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function wsStockOperations_StockOperations_UpdateCosts(ByVal request As wsStockOperations.UpdateCosts) As wsStockOperations.UpdateCostsResponse Implements wsStockOperations.StockOperations.UpdateCosts
            Return MyBase.Channel.UpdateCosts(request)
        End Function
        
        Public Function UpdateCosts(ByVal lws As wsStockOperations.lws, ByVal UpdateCosts1 As wsStockOperations.UpdateCostsType) As wsStockOperations.UpdateCostsResponseType
            Dim inValue As wsStockOperations.UpdateCosts = New wsStockOperations.UpdateCosts()
            inValue.lws = lws
            inValue.UpdateCosts1 = UpdateCosts1
            Dim retVal As wsStockOperations.UpdateCostsResponse = CType(Me,wsStockOperations.StockOperations).UpdateCosts(inValue)
            Return retVal.UpdateCostsResponse1
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function wsStockOperations_StockOperations_UpdateCostsAsync(ByVal request As wsStockOperations.UpdateCosts) As System.Threading.Tasks.Task(Of wsStockOperations.UpdateCostsResponse) Implements wsStockOperations.StockOperations.UpdateCostsAsync
            Return MyBase.Channel.UpdateCostsAsync(request)
        End Function
        
        Public Function UpdateCostsAsync(ByVal lws As wsStockOperations.lws, ByVal UpdateCosts1 As wsStockOperations.UpdateCostsType) As System.Threading.Tasks.Task(Of wsStockOperations.UpdateCostsResponse)
            Dim inValue As wsStockOperations.UpdateCosts = New wsStockOperations.UpdateCosts()
            inValue.lws = lws
            inValue.UpdateCosts1 = UpdateCosts1
            Return CType(Me,wsStockOperations.StockOperations).UpdateCostsAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function wsStockOperations_StockOperations_Catchweight(ByVal request As wsStockOperations.Catchweight) As wsStockOperations.CatchweightResponse Implements wsStockOperations.StockOperations.Catchweight
            Return MyBase.Channel.Catchweight(request)
        End Function
        
        Public Function Catchweight(ByVal lws As wsStockOperations.lws, ByVal Catchweight1 As wsStockOperations.CatchweightType) As wsStockOperations.CatchweightResponseType
            Dim inValue As wsStockOperations.Catchweight = New wsStockOperations.Catchweight()
            inValue.lws = lws
            inValue.Catchweight1 = Catchweight1
            Dim retVal As wsStockOperations.CatchweightResponse = CType(Me,wsStockOperations.StockOperations).Catchweight(inValue)
            Return retVal.CatchweightResponse1
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function wsStockOperations_StockOperations_CatchweightAsync(ByVal request As wsStockOperations.Catchweight) As System.Threading.Tasks.Task(Of wsStockOperations.CatchweightResponse) Implements wsStockOperations.StockOperations.CatchweightAsync
            Return MyBase.Channel.CatchweightAsync(request)
        End Function
        
        Public Function CatchweightAsync(ByVal lws As wsStockOperations.lws, ByVal Catchweight1 As wsStockOperations.CatchweightType) As System.Threading.Tasks.Task(Of wsStockOperations.CatchweightResponse)
            Dim inValue As wsStockOperations.Catchweight = New wsStockOperations.Catchweight()
            inValue.lws = lws
            inValue.Catchweight1 = Catchweight1
            Return CType(Me,wsStockOperations.StockOperations).CatchweightAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function wsStockOperations_StockOperations_DisplayCosts(ByVal request As wsStockOperations.DisplayCosts) As wsStockOperations.DisplayCostsResponse Implements wsStockOperations.StockOperations.DisplayCosts
            Return MyBase.Channel.DisplayCosts(request)
        End Function
        
        Public Function DisplayCosts(ByVal lws As wsStockOperations.lws, ByVal DisplayCosts1 As wsStockOperations.DisplayCostsType) As wsStockOperations.DisplayCostsResponseType
            Dim inValue As wsStockOperations.DisplayCosts = New wsStockOperations.DisplayCosts()
            inValue.lws = lws
            inValue.DisplayCosts1 = DisplayCosts1
            Dim retVal As wsStockOperations.DisplayCostsResponse = CType(Me,wsStockOperations.StockOperations).DisplayCosts(inValue)
            Return retVal.DisplayCostsResponse1
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function wsStockOperations_StockOperations_DisplayCostsAsync(ByVal request As wsStockOperations.DisplayCosts) As System.Threading.Tasks.Task(Of wsStockOperations.DisplayCostsResponse) Implements wsStockOperations.StockOperations.DisplayCostsAsync
            Return MyBase.Channel.DisplayCostsAsync(request)
        End Function
        
        Public Function DisplayCostsAsync(ByVal lws As wsStockOperations.lws, ByVal DisplayCosts1 As wsStockOperations.DisplayCostsType) As System.Threading.Tasks.Task(Of wsStockOperations.DisplayCostsResponse)
            Dim inValue As wsStockOperations.DisplayCosts = New wsStockOperations.DisplayCosts()
            inValue.lws = lws
            inValue.DisplayCosts1 = DisplayCosts1
            Return CType(Me,wsStockOperations.StockOperations).DisplayCostsAsync(inValue)
        End Function
    End Class
End Namespace
